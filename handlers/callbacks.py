from services.telegram_api import send_message, delete_message
from services.payments import handle_payment  # Import the handle_payment function
from services.payments import create_checkout_session  # Import the create_checkout_session function

def handle_callback(update):
    """Handles inline button interactions."""
    callback_query = update["callback_query"]
    chat_id = callback_query["message"]["chat"]["id"]
    message_id = callback_query["message"]["message_id"]
    callback_data = callback_query["data"]

    try:
        print(f"üìå DEBUG: Received callback with data: {callback_data}")  # ‚úÖ Debugging

        if callback_data == "open_fractalbio":
            url = "https://www.fractalbio.ai"  # ‚úÖ Safe URL inside the function
            safe_url = url.replace(".", "\\.")  # ‚úÖ Escape dots for MarkdownV2
            send_message(chat_id, f"üîó [–ù–∞–∂–º–∏—Ç–µ –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç]({safe_url})", parse_mode="MarkdownV2")
            delete_message(chat_id, message_id)  # ‚úÖ Ensure callback messages are deleted

        elif callback_data == "open_stripe":
            url = create_checkout_session(chat_id)  # ‚úÖ Stripe URL
            safe_url = url.replace(".", "\\.")  # ‚úÖ Escape dots for MarkdownV2
            send_message(chat_id, f"üí≥ [–û—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É]({safe_url})", parse_mode="MarkdownV2")
            delete_message(chat_id, message_id)  # ‚úÖ Ensure callback messages are deleted

        elif callback_data == "start_chat":
            send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! –Ø digital-–î–∞—à–∞, —Ç–≤–æ–π —Ç—Ä–µ–Ω–µ—Ä. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")
            delete_message(chat_id, message_id)  # ‚úÖ Ensure callback messages are deleted

        elif callback_data == "about_project":
            send_message(chat_id, "üìå –≠—Ç–æ –º–æ–π Telegram –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Å —Ñ–∏—Ç–Ω–µ—Å–æ–º –∏ –ò–ò-—Å–æ–≤–µ—Ç–∞–º–∏!")
            delete_message(chat_id, message_id)  # ‚úÖ Ensure callback messages are deleted

        delete_message(chat_id, message_id)  # ‚úÖ Ensure callback messages are deleted

    except Exception as e:
        print(f"üö® ERROR in handle_callback: {e}")  # ‚úÖ Catch errors
        send_message(chat_id, "‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
